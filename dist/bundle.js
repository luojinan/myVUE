!function(e){var t={};function o(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,o),l.l=!0,l.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)o.d(n,l,function(t){return e[t]}.bind(null,l));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){var n=new(o(1))({el:"#myvue-app",data:{title:"hello world"},methods:{clickBtn:function(e){this.title="hello world"}}});window.setTimeout((function(){console.log("定时2秒改变title的值"),n.data.title="change"}),2e3)},function(e,t){function o(e,t,o){Object.defineProperty(o.data,e,{get:()=>(console.log(`${e}属性被读取了...`),t),set(n){console.log(`${e}属性从${t}被修改成了${n}`),t=n,o.dep[e].forEach(e=>{e.cb(t)})}})}function n(e,t,o){this.val=e.data[t],console.log("执行watcher构造函数",t,e.dep[t]),e.dep[t].push(this),this.cb=o}function l(e,t){this.fragment=null,this.vm=e,this.el=document.querySelector(t),this.init()}l.prototype={init(){console.log("run new Compile init",this.el),this.el?(this.fragment=this.domToFragment(this.el),this.compileElement(this.fragment),this.el.appendChild(this.fragment)):console.log("Dom元素不存在")},domToFragment(e){let t=document.createDocumentFragment(),o=e.firstChild;for(;o;)t.appendChild(o),o=e.firstChild;return console.log("移动完成的dom片段",t),console.log("移动完成后的真实dom",e),t},compileElement(e){let t=e.childNodes;console.log("解析dom",t),t.forEach(e=>{let t=/\{\{(.*)\}\}/,o=e.textContent;t.test(o)&&this.compileText(e,t.exec(o)[1]),1==e.nodeType&&this.compileAttr(e)})},compileText(e,t){console.log("执行到替换{{}}的值",this,this.vm);let o=this.vm.data[t];e.textContent=o||"",new n(this.vm,t,t=>{console.log("触发{{}}的set"),console.log("执行callback，此时doms和val",e,t),e.innerHTML=t})},compileAttr(e){let t=e.attributes;console.log("获取dom属性指令",t),Array.prototype.forEach.call(t,t=>{let o=t.name;if(console.log(t.name,"遍历dom属性名"),0==o.indexOf("v-")){let n=o.substring(2),l=t.value;console.log("dir",n),"model"==n&&this.compileModel(e,l)}})},compileModel(e,t){let o=this.vm.data[t];e.value=o||"",console.log(this.vm,"v-model"),new n(this.vm,t,t=>{console.log("触发v-model的set"),e.value=t||""}),e.addEventListener("input",e=>{let n=e.target.value;o!=n&&(val=n,this.vm.data[t]=val)})}},e.exports=function(e){this.el=e.el,this.data=e.data,this.methods=e.methods,this.dep={},function(e,t){for(const n in e)e.hasOwnProperty(n)&&(t.dep[n]=[],console.log("遍历数据对象data中的key值--\x3e",n),o(n,e[n],t));console.log("劫持后的data--\x3e",e),console.log("劫持后的dep--\x3e",t.dep)}(this.data,this),new l(this,this.el)}}]);